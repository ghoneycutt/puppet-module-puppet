# This file is being maintained by Puppet.
# DO NOT EDIT

#LoadModule passenger_module <%= scope.lookupvar('passenger::mod_passenger_location') %>
#PassengerRoot <%= scope.lookupvar('passenger::gem_path') %>/passenger-<%= scope.lookupvar('passenger::passenger_version') %>
#PassengerRuby /usr/bin/ruby

# you may want to tune these settings
PassengerHighPerformance on
PassengerMaxPoolSize 12
PassengerPoolIdleTime 1500
# PassengerMaxRequests 1000
PassengerStatThrottleRate 120
RailsAutoDetect On

<% if @port != '80' %>Listen <%= @port %><% end %>
<VirtualHost *:<%= @port %>>
  ServerName <%= @dashboard_fqdn %>
  DocumentRoot /usr/share/puppet-dashboard/public/
  <Directory /usr/share/puppet-dashboard/public/>
    Options None
    Order allow,deny
    allow from all
  </Directory>
  ErrorLog <%= @log_dir %>/dashboard_error.log
  LogLevel warn
  CustomLog <%= @log_dir %>/dashboard_access.log combined
  ServerSignature On

# Uncomment this section to enable basic auth. This section can also be copied
# to the HTTPS VirtualHost example below.
#   # For report submission from masters.
#   <Location /reports/upload>
#       <Limit POST>
#           # Configuration restricts HTTP actions to POST only
#           Order allow,deny
#           # Allow from localhost
#           # Allow from localhost.localdomain
#           # Allow from 127.0.0.1
#           # Allow from example.com
#           # This can be locked down to just your puppet master if required
#           # See examples above, or http://httpd.apache.org/docs/2.2/howto/access.html
#           Allow from all
#           Satisfy any
#       </Limit>
#   </Location>
#
#   # For node definitions from masters.
#   <Location /nodes>
#       <Limit GET>
#           # Configuration restricts HTTP actions to GET only
#           Order allow,deny
#           # Allow from localhost.localdomain
#           # Allow from localhost
#           # Allow from 127.0.0.1
#           # Allow from example.com
#           # This can be locked down to just your puppet master if required
#           # See examples above, or http://httpd.apache.org/docs/2.2/howto/access.html
#           Allow from all
#           Satisfy any
#       </Limit>
#   </Location>
#
#   # For web access by humans.
#   <Location "/">
#       AuthType basic
#       AuthName "Puppet Dashboard"
#       Require valid-user
#       AuthBasicProvider file
#       AuthUserFile /etc/apache2/passwords # Change to your preferred password file location
#   </Location>

</VirtualHost>

# Uncomment this section to enable HTTPS (SSL)
#Listen 443
#<VirtualHost *:443>
#        SSLEngine on
#        SSLProtocol -ALL +SSLv3 +TLSv1
#        SSLCipherSuite ALL:!ADH:RC4+RSA:+HIGH:+MEDIUM:-LOW:-SSLv2:-EXP
#
#        SSLCertificateFile        /usr/share/puppet-dashboard/certs/dashboard.cert.pem
#        SSLCertificateKeyFile     /usr/share/puppet-dashboard/certs/dashboard.private_key.pem
#        SSLCACertificateFile      /usr/share/puppet-dashboard/certs/dashboard.ca_cert.pem
#
#        # If Apache complains about invalid signatures on the CRL, you can try disabling
#        # CRL checking by commenting the next line, but this is not recommended.
#        SSLCARevocationFile       /usr/share/puppet-dashboard/certs/dashboard.ca_crl.pem
#
#        SSLVerifyClient optional
#        SSLVerifyDepth  1
#        SSLOptions +StdEnvVars
#
#        ServerName dashboard.example.com # UPDATE THIS TO YOUR FQDN
#        DocumentRoot /usr/share/puppet-dashboard/public
#        <Directory   /usr/share/puppet-dashboard/public>
#                Options None
#                AllowOverride None
#                Order allow,deny
#                allow from all
#        </Directory>
#        <Location / >
#                Order deny,allow
#                Allow from ALL
#                # Enable this to require client-side certificates for Dashboard connections
#                #SSLVerifyClient require
#        </Location>
#</VirtualHost>
